openapi: 3.0.3
info:
  title: NetTechPro API
  description: |
    RESTful API cho website bán thiết bị mạng NetTechPro.
    
    ## Tính năng
    - Quản lý sản phẩm (Products)
    - Quản lý danh mục (Categories)
    - Quản lý thương hiệu (Brands)
    - Quản lý đơn hàng (Orders)
    - Giỏ hàng (Cart)
    - Xác thực (Authentication)
    
    ## Mock Data
    - 8 sản phẩm thiết bị mạng
    - 8 danh mục
    - 10 thương hiệu
    - 3 đơn hàng mẫu
  version: 1.0.0
  contact:
    name: NetTechPro API Support
    email: support@nettechpro.me
servers:
  - url: http://localhost:5000
    description: Development server
  - url: https://api.nettechpro.me
    description: Production server

tags:
  - name: System
    description: System health check
  - name: Products
    description: Quản lý sản phẩm
  - name: Categories
    description: Quản lý danh mục
  - name: Brands
    description: Quản lý thương hiệu
  - name: Orders
    description: Quản lý đơn hàng
  - name: Cart
    description: Quản lý giỏ hàng
  - name: Auth
    description: Xác thực người dùng

paths:
  /api/health:
    get:
      summary: Health check
      description: Kiểm tra server status
      tags: [System]
      responses:
        '200':
          description: Server đang hoạt động
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
  
  /api/products:
    get:
      summary: Lấy danh sách sản phẩm
      description: Lấy tất cả sản phẩm với filter, sort, search
      tags: [Products]
      parameters:
        - name: categoryId
          in: query
          description: Lọc theo danh mục
          schema:
            type: string
            example: cat-1
        - name: brandId
          in: query
          description: Lọc theo thương hiệu
          schema:
            type: string
            example: brand-1
        - name: featured
          in: query
          description: Lọc sản phẩm nổi bật
          schema:
            type: boolean
        - name: search
          in: query
          description: Tìm kiếm theo tên
          schema:
            type: string
        - name: sortBy
          in: query
          description: Sắp xếp
          schema:
            type: string
            enum: [price-asc, price-desc, name, newest]
      responses:
        '200':
          description: Danh sách sản phẩm
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  total:
                    type: integer
                    example: 8
    post:
      summary: Tạo sản phẩm mới
      description: Tạo sản phẩm (Admin only)
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Sản phẩm đã được tạo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  
  /api/products/{id}:
    get:
      summary: Lấy chi tiết sản phẩm
      tags: [Products]
      parameters:
        - name: id
          in: path
          required: true
          description: ID hoặc slug của sản phẩm
          schema:
            type: string
      responses:
        '200':
          description: Chi tiết sản phẩm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Không tìm thấy sản phẩm
    put:
      summary: Cập nhật sản phẩm
      tags: [Products]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Sản phẩm đã được cập nhật
    delete:
      summary: Xóa sản phẩm
      tags: [Products]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Sản phẩm đã được xóa

  /api/categories:
    get:
      summary: Lấy danh sách danh mục
      tags: [Categories]
      responses:
        '200':
          description: Danh sách danh mục
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                  total:
                    type: integer
    post:
      summary: Tạo danh mục mới
      tags: [Categories]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryInput'
      responses:
        '201':
          description: Danh mục đã được tạo

  /api/categories/{id}:
    get:
      summary: Lấy chi tiết danh mục
      tags: [Categories]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Chi tiết danh mục
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'

  /api/brands:
    get:
      summary: Lấy danh sách thương hiệu
      tags: [Brands]
      parameters:
        - name: featured
          in: query
          description: Lọc thương hiệu nổi bật
          schema:
            type: boolean
      responses:
        '200':
          description: Danh sách thương hiệu
          content:
            application/json:
              schema:
                type: object
                properties:
                  brands:
                    type: array
                    items:
                      $ref: '#/components/schemas/Brand'
                  total:
                    type: integer

  /api/brands/{id}:
    get:
      summary: Lấy chi tiết thương hiệu
      tags: [Brands]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Chi tiết thương hiệu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'

  /api/orders:
    get:
      summary: Lấy tất cả đơn hàng (Admin)
      tags: [Orders]
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, confirmed, processing, shipped, delivered, cancelled]
      responses:
        '200':
          description: Danh sách đơn hàng
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  total:
                    type: integer
    post:
      summary: Tạo đơn hàng mới
      tags: [Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderInput'
      responses:
        '201':
          description: Đơn hàng đã được tạo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /api/orders/my:
    get:
      summary: Lấy đơn hàng của tôi
      tags: [Orders]
      parameters:
        - name: userId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Danh sách đơn hàng

  /api/orders/{id}:
    get:
      summary: Lấy chi tiết đơn hàng
      tags: [Orders]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Chi tiết đơn hàng
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /api/orders/{id}/status:
    put:
      summary: Cập nhật trạng thái đơn hàng
      tags: [Orders]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [pending, confirmed, processing, shipped, delivered, cancelled]
      responses:
        '200':
          description: Trạng thái đã được cập nhật

  /api/orders/{id}/cancel:
    post:
      summary: Hủy đơn hàng
      tags: [Orders]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Đơn hàng đã được hủy

  /api/cart:
    get:
      summary: Lấy giỏ hàng
      tags: [Cart]
      responses:
        '200':
          description: Thông tin giỏ hàng
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
    delete:
      summary: Xóa toàn bộ giỏ hàng
      tags: [Cart]
      responses:
        '200':
          description: Giỏ hàng đã được xóa

  /api/cart/items:
    post:
      summary: Thêm sản phẩm vào giỏ hàng
      tags: [Cart]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                quantity:
                  type: integer
                price:
                  type: number
      responses:
        '200':
          description: Sản phẩm đã được thêm vào giỏ

  /api/cart/items/{itemId}:
    put:
      summary: Cập nhật số lượng sản phẩm
      tags: [Cart]
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
      responses:
        '200':
          description: Số lượng đã được cập nhật
    delete:
      summary: Xóa sản phẩm khỏi giỏ hàng
      tags: [Cart]
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Sản phẩm đã được xóa

  /api/auth/login:
    post:
      summary: Đăng nhập
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Đăng nhập thành công

  /api/auth/register:
    post:
      summary: Đăng ký
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                fullName:
                  type: string
      responses:
        '201':
          description: Đăng ký thành công

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          example: prod-1
        name:
          type: string
          example: Cisco Catalyst 2960-X Series Switch
        nameVi:
          type: string
          example: Switch Cisco Catalyst 2960-X 24 Port
        slug:
          type: string
          example: cisco-catalyst-2960-x-24-port
        description:
          type: string
        descriptionVi:
          type: string
        price:
          type: number
          example: 15900000
        salePrice:
          type: number
          example: 14500000
        discount:
          type: number
          example: 9
        stock:
          type: integer
          example: 25
        categoryId:
          type: string
        brandId:
          type: string
        images:
          type: array
          items:
            type: string
        rating:
          type: number
          example: 4.8
        featured:
          type: boolean
        new:
          type: boolean
        bestseller:
          type: boolean
    
    ProductInput:
      type: object
      required: [name, nameVi, price, stock, categoryId, brandId]
      properties:
        name:
          type: string
        nameVi:
          type: string
        slug:
          type: string
        description:
          type: string
        descriptionVi:
          type: string
        price:
          type: number
        salePrice:
          type: number
        stock:
          type: integer
        categoryId:
          type: string
        brandId:
          type: string
        images:
          type: array
          items:
            type: string
        featured:
          type: boolean
        new:
          type: boolean
        bestseller:
          type: boolean
    
    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        nameVi:
          type: string
        slug:
          type: string
        description:
          type: string
        descriptionVi:
          type: string
        productCount:
          type: integer
        order:
          type: integer
    
    CategoryInput:
      type: object
      required: [name, nameVi, slug]
      properties:
        name:
          type: string
        nameVi:
          type: string
        slug:
          type: string
        description:
          type: string
        descriptionVi:
          type: string
    
    Brand:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        logo:
          type: string
        description:
          type: string
        descriptionVi:
          type: string
        country:
          type: string
        productCount:
          type: integer
        featured:
          type: boolean
    
    Order:
      type: object
      properties:
        id:
          type: string
        orderNumber:
          type: string
          example: ORD-20251015-001
        userId:
          type: string
        userName:
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
              productName:
                type: string
              productNameVi:
                type: string
              quantity:
                type: integer
              price:
                type: number
        subtotal:
          type: number
        shippingFee:
          type: number
        totalAmount:
          type: number
        status:
          type: string
          enum: [pending, confirmed, processing, shipped, delivered, cancelled]
        statusVi:
          type: string
        paymentMethod:
          type: string
          enum: [cod, bank_transfer, momo, vnpay, credit_card]
        paymentMethodVi:
          type: string
        shippingAddress:
          type: object
          properties:
            fullName:
              type: string
            phone:
              type: string
            address:
              type: string
            city:
              type: string
        createdAt:
          type: string
          format: date-time
    
    OrderInput:
      type: object
      required: [items, shippingAddress, paymentMethod]
      properties:
        userId:
          type: string
        userName:
          type: string
        items:
          type: array
          items:
            type: object
        shippingAddress:
          type: object
        paymentMethod:
          type: string
    
    Cart:
      type: object
      properties:
        id:
          type: string
        items:
          type: array
          items:
            type: object
        totalItems:
          type: integer
        totalPrice:
          type: number
